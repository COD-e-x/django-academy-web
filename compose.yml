services:
  db:
    image: postgres:17
    container_name: db-container
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis-container
    command: >
      redis-server
      --save 900 1
      --save 300 10
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    env_file:
      - ./.env
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 3s
      retries: 3

  web:
    build: .
    container_name: web-container
    volumes:
      - ./static:/app/static
      - ./kennel/config/core/media:/app/kennel/config/core/media
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
      - ./kennel/config/core/media:/media:ro
    depends_on:
      - web
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge
